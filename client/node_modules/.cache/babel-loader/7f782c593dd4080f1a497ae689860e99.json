{"ast":null,"code":"export class MediaLoader {\n  constructor() {\n    if (typeof window !== 'undefined') {\n      this.image = new Image();\n      this.resolve = null;\n      this.video = document.createElement('video');\n      this.events();\n    }\n  }\n\n  events() {\n    this.video.addEventListener('loadeddata', () => this.resolve && this.resolve(true));\n    this.video.addEventListener('loadeddata', () => this.resolve && this.resolve(false));\n\n    this.image.onload = () => this.resolve && this.resolve(true);\n\n    this.image.onerror = () => this.resolve && this.resolve(false);\n  }\n\n  load(url) {\n    return new Promise(resolve => {\n      if (!url) {\n        resolve(true);\n      }\n\n      this.resolve = resolve;\n      this.loading = true;\n      this.ended = false;\n\n      if (url.match(/\\.(mp4|webm)/i)) {\n        this.video.setAttribute('src', url);\n      }\n\n      if (url.match(/\\.(png|jp(e)?g|gif|webp)/i)) {\n        this.image.src = url;\n\n        if (this.image.width > 0 || this.image.height > 0) {\n          resolve(true);\n        }\n      }\n    });\n  }\n\n  loadImage(url) {\n    const image = new Image();\n    let loaded = false;\n\n    image.onload = () => {\n      if (!loaded) this.pumpLoaded();\n    };\n\n    image.onerror = () => {\n      if (!loaded) this.pumpLoaded();\n    };\n\n    image.src = url;\n\n    if (loaded === false && (image.width > 0 || image.height > 0)) {\n      loaded = true;\n      this.pumpLoaded();\n    }\n  }\n\n  loadVideo(url) {\n    const video = document.createElement('video');\n    video.addEventListener('loadeddata', () => {\n      this.pumpLoaded();\n    });\n    video.addEventListener('error', () => {\n      this.pumpLoaded();\n    });\n    video.setAttribute('src', url);\n  }\n\n  pumpLoaded() {\n    this.loaded += 1;\n\n    if (this.loaded === this.toLoad) {\n      this.resolver(true);\n    }\n  }\n\n  startLoad(url) {\n    if (url.match(/\\.(mp4|webm)/i)) {\n      this.loadVideo(url);\n    }\n\n    if (url.match(/\\.(png|jp(e)?g|gif|webp)/i)) {\n      this.loadImage(url);\n    }\n  }\n\n  loadMultiple(urls) {\n    this.loaded = 0;\n    this.toLoad = urls.length;\n    return new Promise(resolve => {\n      this.resolver = resolve;\n      urls.forEach(url => {\n        this.startLoad(url);\n      });\n    });\n  }\n\n}\nexport function serialize(obj, separator = '&') {\n  return Object.entries(obj).map(([key, val]) => `${key}=${val}`).join(separator);\n}\nexport function classToModules(classNames = [], cssModule) {\n  if (!cssModule) {\n    return classNames.join(' ').trim();\n  }\n\n  const result = [];\n  let i = classNames.length; // eslint-disable-next-line\n\n  while (i--) {\n    if (cssModule[classNames[i]]) {\n      result.push(cssModule[classNames[i]]);\n    }\n  }\n\n  return result;\n}\nexport function getClassName(className = '', cssModule) {\n  if (cssModule) {\n    return cssModule[className] || className;\n  }\n\n  return className;\n}","map":{"version":3,"sources":["/Users/akikonakayama54/Documents/SKILLSPIRE2020/ReactApps/project/src/component/srcc/helpers/components.js"],"names":["MediaLoader","constructor","window","image","Image","resolve","video","document","createElement","events","addEventListener","onload","onerror","load","url","Promise","loading","ended","match","setAttribute","src","width","height","loadImage","loaded","pumpLoaded","loadVideo","toLoad","resolver","startLoad","loadMultiple","urls","length","forEach","serialize","obj","separator","Object","entries","map","key","val","join","classToModules","classNames","cssModule","trim","result","i","push","getClassName","className"],"mappings":"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","sourcesContent":["export class MediaLoader {\n  constructor() {\n    if (typeof window !== 'undefined') {\n      this.image = new Image();\n      this.resolve = null;\n      this.video = document.createElement('video');\n      this.events();\n    }\n  }\n  events() {\n    this.video.addEventListener(\n      'loadeddata',\n      () => this.resolve && this.resolve(true)\n    );\n    this.video.addEventListener(\n      'loadeddata',\n      () => this.resolve && this.resolve(false)\n    );\n    this.image.onload = () => this.resolve && this.resolve(true);\n    this.image.onerror = () => this.resolve && this.resolve(false);\n  }\n  load(url) {\n    return new Promise(resolve => {\n      if (!url) {\n        resolve(true);\n      }\n      this.resolve = resolve;\n      this.loading = true;\n      this.ended = false;\n      if (url.match(/\\.(mp4|webm)/i)) {\n        this.video.setAttribute('src', url);\n      }\n      if (url.match(/\\.(png|jp(e)?g|gif|webp)/i)) {\n        this.image.src = url;\n        if (this.image.width > 0 || this.image.height > 0) {\n          resolve(true);\n        }\n      }\n    });\n  }\n  loadImage(url) {\n    const image = new Image();\n    let loaded = false;\n    image.onload = () => {\n      if (!loaded) this.pumpLoaded();\n    };\n    image.onerror = () => {\n      if (!loaded) this.pumpLoaded();\n    };\n    image.src = url;\n    if (loaded === false && (image.width > 0 || image.height > 0)) {\n      loaded = true;\n      this.pumpLoaded();\n    }\n  }\n  loadVideo(url) {\n    const video = document.createElement('video');\n    video.addEventListener('loadeddata', () => {\n      this.pumpLoaded();\n    });\n    video.addEventListener('error', () => {\n      this.pumpLoaded();\n    });\n    video.setAttribute('src', url);\n  }\n  pumpLoaded() {\n    this.loaded += 1;\n    if (this.loaded === this.toLoad) {\n      this.resolver(true);\n    }\n  }\n  startLoad(url) {\n    if (url.match(/\\.(mp4|webm)/i)) {\n      this.loadVideo(url);\n    }\n    if (url.match(/\\.(png|jp(e)?g|gif|webp)/i)) {\n      this.loadImage(url);\n    }\n  }\n  loadMultiple(urls) {\n    this.loaded = 0;\n    this.toLoad = urls.length;\n    return new Promise(resolve => {\n      this.resolver = resolve;\n      urls.forEach(url => {\n        this.startLoad(url);\n      });\n    });\n  }\n}\n\nexport function serialize(obj, separator = '&') {\n  return Object.entries(obj)\n    .map(([key, val]) => `${key}=${val}`)\n    .join(separator);\n}\n\nexport function classToModules(classNames = [], cssModule) {\n  if (!cssModule) {\n    return classNames.join(' ').trim();\n  }\n  const result = [];\n  let i = classNames.length;\n  // eslint-disable-next-line\n  while (i--) {\n    if (cssModule[classNames[i]]) {\n      result.push(cssModule[classNames[i]]);\n    }\n  }\n  return result;\n}\n\nexport function getClassName(className = '', cssModule) {\n  if (cssModule) {\n    return cssModule[className] || className;\n  }\n  return className;\n}\n"]},"metadata":{},"sourceType":"module"}