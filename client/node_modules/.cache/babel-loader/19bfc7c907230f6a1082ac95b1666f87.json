{"ast":null,"code":"var _jsxFileName = \"/Users/akikonakayama54/Documents/SKILLSPIRE2020/ReactApps/project/src/component/srcc/core/buttons.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getClassName } from '../helpers/components';\nexport default class Buttons extends React.Component {\n  componentDidMount() {\n    this.props.onMount({\n      element: this.controls,\n      next: this.next,\n      prev: this.prev\n    });\n  }\n\n  render() {\n    const {\n      rootElement,\n      cssModule,\n      organicArrows,\n      buttonContentLeft,\n      buttonContentRight,\n      onNext,\n      onPrev\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: controls => {\n        this.controls = controls;\n        this.props.onMount({\n          element: this.controls,\n          next: this.next || null,\n          prev: this.prev || null\n        });\n      },\n      className: [getClassName(`${rootElement}__controls`, cssModule), getClassName(`${rootElement}__controls--hidden`, cssModule)].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      ref: next => {\n        this.next = next;\n      },\n      \"aria-label\": \"next\",\n      className: getClassName(`${rootElement}__next`, cssModule),\n      onClick: onNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, organicArrows ? /*#__PURE__*/React.createElement(\"span\", {\n      className: getClassName(`${rootElement}__controls__arrow-right`, cssModule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }) : buttonContentRight), /*#__PURE__*/React.createElement(\"button\", {\n      ref: prev => {\n        this.prev = prev;\n      },\n      \"aria-label\": \"previous\",\n      className: getClassName(`${rootElement}__prev`, cssModule),\n      onClick: onPrev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, organicArrows ? /*#__PURE__*/React.createElement(\"span\", {\n      className: getClassName(`${rootElement}__controls__arrow-left`, cssModule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }) : buttonContentLeft));\n  }\n\n}\nButtons.propTypes = {\n  cssModule: PropTypes.object,\n  rootElement: PropTypes.string.isRequired,\n  onMount: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  onPrev: PropTypes.func.isRequired,\n  buttonContentLeft: PropTypes.node,\n  buttonContentRight: PropTypes.node,\n  organicArrows: PropTypes.bool\n};\nButtons.defaultProps = {\n  cssModule: null,\n  organicArrows: true,\n  buttonContentLeft: null,\n  buttonContentRight: null\n};","map":{"version":3,"sources":["/Users/akikonakayama54/Documents/SKILLSPIRE2020/ReactApps/project/src/component/srcc/core/buttons.js"],"names":["React","PropTypes","getClassName","Buttons","Component","componentDidMount","props","onMount","element","controls","next","prev","render","rootElement","cssModule","organicArrows","buttonContentLeft","buttonContentRight","onNext","onPrev","join","propTypes","object","string","isRequired","func","node","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getClassName } from '../helpers/components';\n\nexport default class Buttons extends React.Component {\n  static propTypes = {\n    cssModule: PropTypes.object,\n    rootElement: PropTypes.string.isRequired,\n    onMount: PropTypes.func.isRequired,\n    onNext: PropTypes.func.isRequired,\n    onPrev: PropTypes.func.isRequired,\n    buttonContentLeft: PropTypes.node,\n    buttonContentRight: PropTypes.node,\n    organicArrows: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    cssModule: null,\n    organicArrows: true,\n    buttonContentLeft: null,\n    buttonContentRight: null,\n  };\n\n  componentDidMount() {\n    this.props.onMount({\n      element: this.controls,\n      next: this.next,\n      prev: this.prev,\n    });\n  }\n\n  render() {\n    const {\n      rootElement,\n      cssModule,\n      organicArrows,\n      buttonContentLeft,\n      buttonContentRight,\n      onNext,\n      onPrev,\n    } = this.props;\n\n    return (\n      <div\n        ref={controls => {\n          this.controls = controls;\n          this.props.onMount({\n            element: this.controls,\n            next: this.next || null,\n            prev: this.prev || null,\n          });\n        }}\n        className={[\n          getClassName(`${rootElement}__controls`, cssModule),\n          getClassName(`${rootElement}__controls--hidden`, cssModule),\n        ].join(' ')}\n      >\n        <button\n          ref={next => {\n            this.next = next;\n          }}\n          aria-label=\"next\"\n          className={getClassName(`${rootElement}__next`, cssModule)}\n          onClick={onNext}\n        >\n          {organicArrows ? (\n            <span\n              className={getClassName(\n                `${rootElement}__controls__arrow-right`,\n                cssModule\n              )}\n            />\n          ) : (\n            buttonContentRight\n          )}\n        </button>\n        <button\n          ref={prev => {\n            this.prev = prev;\n          }}\n          aria-label=\"previous\"\n          className={getClassName(`${rootElement}__prev`, cssModule)}\n          onClick={onPrev}\n        >\n          {organicArrows ? (\n            <span\n              className={getClassName(\n                `${rootElement}__controls__arrow-left`,\n                cssModule\n              )}\n            />\n          ) : (\n            buttonContentLeft\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}